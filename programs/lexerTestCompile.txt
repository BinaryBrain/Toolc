OBJECT
ID(RPNCalculator)
LBRACE
DEF
MAIN
LPAREN
RPAREN
COLON
UNIT
EQSIGN
LBRACE
IF
LPAREN
NEW
ID(Calculator)
LPAREN
RPAREN
DOT
ID(test)
LPAREN
RPAREN
RPAREN
LBRACE
PRINTLN
LPAREN
STR(true)
RPAREN
SEMICOLON
RBRACE
RBRACE
RBRACE
CLASS
ID(Calculator)
LBRACE
DEF
ID(test)
LPAREN
RPAREN
COLON
BOOLEAN
EQSIGN
LBRACE
VAR
ID(st)
COLON
ID(Stack)
SEMICOLON
VAR
ID(dummy)
COLON
ID(Stackable)
SEMICOLON
ID(st)
EQSIGN
NEW
ID(Stack)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(Push 3 then push 5)
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(3)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(5)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(Pop)
RPAREN
SEMICOLON
ID(dummy)
EQSIGN
ID(st)
DOT
ID(pop)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(Pop)
RPAREN
SEMICOLON
ID(dummy)
EQSIGN
ID(st)
DOT
ID(pop)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(Push 7 then push 4)
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(7)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(4)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(Push +)
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Operation)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(st)
DOT
ID(plusCode)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(Computes 2 * (5+2) - 18/(2+1) = 8)
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(In RPN => 5 2 + 2 * 18 2 1 + / -)
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(5)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(2)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Operation)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(st)
DOT
ID(plusCode)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(2)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Operation)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(st)
DOT
ID(timesCode)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(18)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(2)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
INT(1)
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Operation)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(st)
DOT
ID(plusCode)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Operation)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(st)
DOT
ID(dividesCode)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Operation)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(st)
DOT
ID(minusCode)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(show)
LPAREN
RPAREN
SEMICOLON
PRINTLN
LPAREN
STR(Trying to pop an operation to test method inheritance (will output error):)
RPAREN
SEMICOLON
ID(dummy)
EQSIGN
NEW
ID(Operation)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(st)
DOT
ID(plusCode)
LPAREN
RPAREN
RPAREN
DOT
ID(popYourselfOutOfStack)
LPAREN
ID(st)
RPAREN
SEMICOLON
RETURN
TRUE
SEMICOLON
RBRACE
RBRACE
CLASS
ID(Stack)
LBRACE
VAR
ID(top)
COLON
ID(Stackable)
SEMICOLON
VAR
ID(isEmpty)
COLON
BOOLEAN
SEMICOLON
DEF
ID(init)
LPAREN
RPAREN
COLON
ID(Stack)
EQSIGN
LBRACE
ID(isEmpty)
EQSIGN
TRUE
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(push)
LPAREN
ID(elem)
COLON
ID(Stackable)
RPAREN
COLON
ID(Stack)
EQSIGN
LBRACE
ID(elem)
EQSIGN
ID(elem)
DOT
ID(pushYourselfOnStack)
LPAREN
THIS
RPAREN
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(pop)
LPAREN
RPAREN
COLON
ID(Stackable)
EQSIGN
LBRACE
RETURN
ID(top)
DOT
ID(popYourselfOutOfStack)
LPAREN
THIS
RPAREN
SEMICOLON
RBRACE
DEF
ID(getTop)
LPAREN
RPAREN
COLON
ID(Stackable)
EQSIGN
LBRACE
RETURN
ID(top)
SEMICOLON
RBRACE
DEF
ID(setTop)
LPAREN
ID(newTop)
COLON
ID(Stackable)
RPAREN
COLON
ID(Stack)
EQSIGN
LBRACE
ID(top)
EQSIGN
ID(newTop)
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(isEmpty)
LPAREN
RPAREN
COLON
BOOLEAN
EQSIGN
LBRACE
RETURN
ID(isEmpty)
SEMICOLON
RBRACE
DEF
ID(setEmpty)
LPAREN
ID(empty)
COLON
BOOLEAN
RPAREN
COLON
ID(Stack)
EQSIGN
LBRACE
ID(isEmpty)
EQSIGN
ID(empty)
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(show)
LPAREN
RPAREN
COLON
ID(Stack)
EQSIGN
LBRACE
IF
LPAREN
ID(isEmpty)
RPAREN
LBRACE
PRINTLN
LPAREN
STR(Stack Empty )
RPAREN
SEMICOLON
RBRACE
ELSE
LBRACE
PRINTLN
LPAREN
STR(Stack = )
PLUS
ID(top)
DOT
ID(toString)
LPAREN
RPAREN
RPAREN
SEMICOLON
RBRACE
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(plusCode)
LPAREN
RPAREN
COLON
INT
EQSIGN
LBRACE
RETURN
INT(0)
SEMICOLON
RBRACE
DEF
ID(minusCode)
LPAREN
RPAREN
COLON
INT
EQSIGN
LBRACE
RETURN
INT(1)
SEMICOLON
RBRACE
DEF
ID(timesCode)
LPAREN
RPAREN
COLON
INT
EQSIGN
LBRACE
RETURN
INT(2)
SEMICOLON
RBRACE
DEF
ID(dividesCode)
LPAREN
RPAREN
COLON
INT
EQSIGN
LBRACE
RETURN
INT(3)
SEMICOLON
RBRACE
RBRACE
CLASS
ID(Stackable)
LBRACE
DEF
ID(value)
LPAREN
RPAREN
COLON
INT
EQSIGN
LBRACE
PRINTLN
LPAREN
STR(Generic Stackable's value must not be used.)
RPAREN
SEMICOLON
RETURN
INT(0)
SEMICOLON
RBRACE
DEF
ID(pushYourselfOnStack)
LPAREN
ID(st)
COLON
ID(Stack)
RPAREN
COLON
ID(Stackable)
EQSIGN
LBRACE
PRINTLN
LPAREN
STR(Generic Stackable must not be used.)
RPAREN
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(popYourselfOutOfStack)
LPAREN
ID(st)
COLON
ID(Stack)
RPAREN
COLON
ID(Stackable)
EQSIGN
LBRACE
PRINTLN
LPAREN
STR(Generic Stackable must not be used to pop.)
RPAREN
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(toString)
LPAREN
RPAREN
COLON
STRING
EQSIGN
LBRACE
RETURN
STR(Generic Stackable must not be used.)
SEMICOLON
RBRACE
RBRACE
CLASS
ID(Integer)
EXTENDS
ID(Stackable)
LBRACE
VAR
ID(value)
COLON
INT
SEMICOLON
VAR
ID(isBottom)
COLON
BOOLEAN
SEMICOLON
VAR
ID(previous)
COLON
ID(Stackable)
SEMICOLON
DEF
ID(init)
LPAREN
ID(initValue)
COLON
INT
RPAREN
COLON
ID(Integer)
EQSIGN
LBRACE
ID(value)
EQSIGN
ID(initValue)
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(value)
LPAREN
RPAREN
COLON
INT
EQSIGN
LBRACE
RETURN
ID(value)
SEMICOLON
RBRACE
DEF
ID(pushYourselfOnStack)
LPAREN
ID(st)
COLON
ID(Stack)
RPAREN
COLON
ID(Stackable)
EQSIGN
LBRACE
IF
LPAREN
ID(st)
DOT
ID(isEmpty)
LPAREN
RPAREN
RPAREN
LBRACE
ID(isBottom)
EQSIGN
TRUE
SEMICOLON
ID(st)
EQSIGN
ID(st)
DOT
ID(setEmpty)
LPAREN
FALSE
RPAREN
SEMICOLON
RBRACE
ELSE
LBRACE
ID(previous)
EQSIGN
ID(st)
DOT
ID(getTop)
LPAREN
RPAREN
SEMICOLON
ID(isBottom)
EQSIGN
FALSE
SEMICOLON
RBRACE
ID(st)
EQSIGN
ID(st)
DOT
ID(setTop)
LPAREN
THIS
RPAREN
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(popYourselfOutOfStack)
LPAREN
ID(st)
COLON
ID(Stack)
RPAREN
COLON
ID(Stackable)
EQSIGN
LBRACE
IF
LPAREN
ID(isBottom)
RPAREN
LBRACE
ID(st)
EQSIGN
ID(st)
DOT
ID(setEmpty)
LPAREN
TRUE
RPAREN
SEMICOLON
RBRACE
ELSE
LBRACE
ID(st)
EQSIGN
ID(st)
DOT
ID(setTop)
LPAREN
ID(previous)
RPAREN
SEMICOLON
RBRACE
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(toString)
LPAREN
RPAREN
COLON
STRING
EQSIGN
LBRACE
VAR
ID(res)
COLON
STRING
SEMICOLON
IF
LPAREN
ID(isBottom)
RPAREN
LBRACE
ID(res)
EQSIGN
ID(value)
PLUS
STR()
SEMICOLON
RBRACE
ELSE
LBRACE
ID(res)
EQSIGN
ID(previous)
DOT
ID(toString)
LPAREN
RPAREN
PLUS
STR(, )
PLUS
ID(value)
SEMICOLON
RBRACE
RETURN
ID(res)
SEMICOLON
RBRACE
RBRACE
CLASS
ID(Operation)
EXTENDS
ID(Stackable)
LBRACE
VAR
ID(opCode)
COLON
INT
SEMICOLON
DEF
ID(init)
LPAREN
ID(operationCode)
COLON
INT
RPAREN
COLON
ID(Operation)
EQSIGN
LBRACE
ID(opCode)
EQSIGN
ID(operationCode)
SEMICOLON
RETURN
THIS
SEMICOLON
RBRACE
DEF
ID(pushYourselfOnStack)
LPAREN
ID(st)
COLON
ID(Stack)
RPAREN
COLON
ID(Stackable)
EQSIGN
LBRACE
VAR
ID(top)
COLON
ID(Stackable)
SEMICOLON
VAR
ID(belowTop)
COLON
ID(Stackable)
SEMICOLON
ID(top)
EQSIGN
ID(st)
DOT
ID(pop)
LPAREN
RPAREN
SEMICOLON
ID(belowTop)
EQSIGN
ID(st)
DOT
ID(pop)
LPAREN
RPAREN
SEMICOLON
IF
LPAREN
ID(opCode)
EQUALS
ID(st)
DOT
ID(plusCode)
LPAREN
RPAREN
RPAREN
LBRACE
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(top)
DOT
ID(value)
LPAREN
RPAREN
PLUS
ID(belowTop)
DOT
ID(value)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
RBRACE
IF
LPAREN
ID(opCode)
EQUALS
ID(st)
DOT
ID(minusCode)
LPAREN
RPAREN
RPAREN
LBRACE
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(belowTop)
DOT
ID(value)
LPAREN
RPAREN
MINUS
ID(top)
DOT
ID(value)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
RBRACE
IF
LPAREN
ID(opCode)
EQUALS
ID(st)
DOT
ID(timesCode)
LPAREN
RPAREN
RPAREN
LBRACE
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(top)
DOT
ID(value)
LPAREN
RPAREN
TIMES
ID(belowTop)
DOT
ID(value)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
RBRACE
IF
LPAREN
ID(opCode)
EQUALS
ID(st)
DOT
ID(dividesCode)
LPAREN
RPAREN
RPAREN
LBRACE
ID(st)
EQSIGN
ID(st)
DOT
ID(push)
LPAREN
NEW
ID(Integer)
LPAREN
RPAREN
DOT
ID(init)
LPAREN
ID(belowTop)
DOT
ID(value)
LPAREN
RPAREN
DIV
ID(top)
DOT
ID(value)
LPAREN
RPAREN
RPAREN
RPAREN
SEMICOLON
RBRACE
RETURN
THIS
SEMICOLON
RBRACE
RBRACE
EOF
